/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as AuthRegisterIndexImport } from './routes/auth/register.index'
import { Route as AuthLogoutIndexImport } from './routes/auth/logout.index'
import { Route as AuthLoginIndexImport } from './routes/auth/login.index'
import { Route as AuthMethodVerifyImport } from './routes/auth/$method.verify'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterIndexRoute = AuthRegisterIndexImport.update({
  id: '/auth/register/',
  path: '/auth/register/',
  getParentRoute: () => rootRoute,
} as any)

const AuthLogoutIndexRoute = AuthLogoutIndexImport.update({
  id: '/auth/logout/',
  path: '/auth/logout/',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginIndexRoute = AuthLoginIndexImport.update({
  id: '/auth/login/',
  path: '/auth/login/',
  getParentRoute: () => rootRoute,
} as any)

const AuthMethodVerifyRoute = AuthMethodVerifyImport.update({
  id: '/auth/$method/verify',
  path: '/auth/$method/verify',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/auth/$method/verify': {
      id: '/auth/$method/verify'
      path: '/auth/$method/verify'
      fullPath: '/auth/$method/verify'
      preLoaderRoute: typeof AuthMethodVerifyImport
      parentRoute: typeof rootRoute
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/logout/': {
      id: '/auth/logout/'
      path: '/auth/logout'
      fullPath: '/auth/logout'
      preLoaderRoute: typeof AuthLogoutIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/register/': {
      id: '/auth/register/'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth/$method/verify': typeof AuthMethodVerifyRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/logout': typeof AuthLogoutIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth/$method/verify': typeof AuthMethodVerifyRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/logout': typeof AuthLogoutIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth/$method/verify': typeof AuthMethodVerifyRoute
  '/auth/login/': typeof AuthLoginIndexRoute
  '/auth/logout/': typeof AuthLogoutIndexRoute
  '/auth/register/': typeof AuthRegisterIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/auth/$method/verify'
    | '/auth/login'
    | '/auth/logout'
    | '/auth/register'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/auth/$method/verify'
    | '/auth/login'
    | '/auth/logout'
    | '/auth/register'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/auth/$method/verify'
    | '/auth/login/'
    | '/auth/logout/'
    | '/auth/register/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AuthMethodVerifyRoute: typeof AuthMethodVerifyRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthLogoutIndexRoute: typeof AuthLogoutIndexRoute
  AuthRegisterIndexRoute: typeof AuthRegisterIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AuthMethodVerifyRoute: AuthMethodVerifyRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthLogoutIndexRoute: AuthLogoutIndexRoute,
  AuthRegisterIndexRoute: AuthRegisterIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/auth/$method/verify",
        "/auth/login/",
        "/auth/logout/",
        "/auth/register/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/auth/$method/verify": {
      "filePath": "auth/$method.verify.tsx"
    },
    "/auth/login/": {
      "filePath": "auth/login.index.tsx"
    },
    "/auth/logout/": {
      "filePath": "auth/logout.index.tsx"
    },
    "/auth/register/": {
      "filePath": "auth/register.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
