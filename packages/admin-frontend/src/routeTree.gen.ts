/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutTopLayoutImport } from './routes/_layout/_top-layout'
import { Route as AuthLoginIndexImport } from './routes/auth/login.index'
import { Route as LayoutTopLayoutIndexImport } from './routes/_layout/_top-layout/index'
import { Route as LayoutTopLayoutUserIndexImport } from './routes/_layout/_top-layout/user/index'
import { Route as LayoutTopLayoutCurrencyIndexImport } from './routes/_layout/_top-layout/currency/index'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutTopLayoutRoute = LayoutTopLayoutImport.update({
  id: '/_top-layout',
  getParentRoute: () => LayoutRoute,
} as any)

const AuthLoginIndexRoute = AuthLoginIndexImport.update({
  id: '/auth/login/',
  path: '/auth/login/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutTopLayoutIndexRoute = LayoutTopLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutTopLayoutRoute,
} as any)

const LayoutTopLayoutUserIndexRoute = LayoutTopLayoutUserIndexImport.update({
  id: '/user/',
  path: '/user/',
  getParentRoute: () => LayoutTopLayoutRoute,
} as any)

const LayoutTopLayoutCurrencyIndexRoute =
  LayoutTopLayoutCurrencyIndexImport.update({
    id: '/currency/',
    path: '/currency/',
    getParentRoute: () => LayoutTopLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/_top-layout': {
      id: '/_layout/_top-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutTopLayoutImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/_top-layout/': {
      id: '/_layout/_top-layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutTopLayoutIndexImport
      parentRoute: typeof LayoutTopLayoutImport
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout/_top-layout/currency/': {
      id: '/_layout/_top-layout/currency/'
      path: '/currency'
      fullPath: '/currency'
      preLoaderRoute: typeof LayoutTopLayoutCurrencyIndexImport
      parentRoute: typeof LayoutTopLayoutImport
    }
    '/_layout/_top-layout/user/': {
      id: '/_layout/_top-layout/user/'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof LayoutTopLayoutUserIndexImport
      parentRoute: typeof LayoutTopLayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutTopLayoutRouteChildren {
  LayoutTopLayoutIndexRoute: typeof LayoutTopLayoutIndexRoute
  LayoutTopLayoutCurrencyIndexRoute: typeof LayoutTopLayoutCurrencyIndexRoute
  LayoutTopLayoutUserIndexRoute: typeof LayoutTopLayoutUserIndexRoute
}

const LayoutTopLayoutRouteChildren: LayoutTopLayoutRouteChildren = {
  LayoutTopLayoutIndexRoute: LayoutTopLayoutIndexRoute,
  LayoutTopLayoutCurrencyIndexRoute: LayoutTopLayoutCurrencyIndexRoute,
  LayoutTopLayoutUserIndexRoute: LayoutTopLayoutUserIndexRoute,
}

const LayoutTopLayoutRouteWithChildren = LayoutTopLayoutRoute._addFileChildren(
  LayoutTopLayoutRouteChildren,
)

interface LayoutRouteChildren {
  LayoutTopLayoutRoute: typeof LayoutTopLayoutRouteWithChildren
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutTopLayoutRoute: LayoutTopLayoutRouteWithChildren,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutTopLayoutRouteWithChildren
  '/': typeof LayoutTopLayoutIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/currency': typeof LayoutTopLayoutCurrencyIndexRoute
  '/user': typeof LayoutTopLayoutUserIndexRoute
}

export interface FileRoutesByTo {
  '': typeof LayoutRouteWithChildren
  '/': typeof LayoutTopLayoutIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/currency': typeof LayoutTopLayoutCurrencyIndexRoute
  '/user': typeof LayoutTopLayoutUserIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/_top-layout': typeof LayoutTopLayoutRouteWithChildren
  '/_layout/_top-layout/': typeof LayoutTopLayoutIndexRoute
  '/auth/login/': typeof AuthLoginIndexRoute
  '/_layout/_top-layout/currency/': typeof LayoutTopLayoutCurrencyIndexRoute
  '/_layout/_top-layout/user/': typeof LayoutTopLayoutUserIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/' | '/auth/login' | '/currency' | '/user'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/' | '/auth/login' | '/currency' | '/user'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/_top-layout'
    | '/_layout/_top-layout/'
    | '/auth/login/'
    | '/_layout/_top-layout/currency/'
    | '/_layout/_top-layout/user/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/auth/login/"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/_top-layout"
      ]
    },
    "/_layout/_top-layout": {
      "filePath": "_layout/_top-layout.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/_top-layout/",
        "/_layout/_top-layout/currency/",
        "/_layout/_top-layout/user/"
      ]
    },
    "/_layout/_top-layout/": {
      "filePath": "_layout/_top-layout/index.tsx",
      "parent": "/_layout/_top-layout"
    },
    "/auth/login/": {
      "filePath": "auth/login.index.tsx"
    },
    "/_layout/_top-layout/currency/": {
      "filePath": "_layout/_top-layout/currency/index.tsx",
      "parent": "/_layout/_top-layout"
    },
    "/_layout/_top-layout/user/": {
      "filePath": "_layout/_top-layout/user/index.tsx",
      "parent": "/_layout/_top-layout"
    }
  }
}
ROUTE_MANIFEST_END */
