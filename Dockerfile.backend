# syntax=docker/dockerfile:1
# check=skip=SecretsUsedInArgOrEnv
FROM node:22 AS base_build
ENV MIKRO_ORM_DB_HOST=pg-db
ENV MIKRO_ORM_DB_PORT=5432
ENV MIKRO_ORM_DB_NAME=zarsad-db
ENV MIKRO_ORM_DB_PASSWORD=testpass
ENV MIKRO_ORM_DB_USER=postgres
ENV NODE_ENV=development
ENV APP_PORT=3007
WORKDIR /build

COPY package.json package-lock.json ./
COPY packages/backend/package.json ./packages/backend/package.json

RUN npm ci -w packages/backend
COPY packages/backend ./packages/backend

FROM base_build AS prod_build
WORKDIR /build

RUN npm run -w packages/backend build
RUN npm run -w packages/backend db-cache-generate
RUN rm packages/backend/src/mikro-orm.config.ts
RUN mv packages/backend/src/mikro-orm.config.production.ts packages/backend/src/mikro-orm.config.ts
RUN rm -rf packages/backend/dist
RUN npm run -w packages/backend build

RUN mv packages/backend/dist ./dist
RUN mv packages/backend/temp ./temp

FROM node:22-slim AS production
WORKDIR /app
COPY --from=prod_build /build/dist /app/dist
COPY --from=prod_build /build/temp /app/temp
COPY --from=prod_build /build/node_modules /app/node_modules
COPY --from=prod_build /build/packages/backend/node_modules /app/node_modules

ENV MIKRO_ORM_DB_HOST=pg-db
ENV MIKRO_ORM_DB_PORT=5432
ENV MIKRO_ORM_DB_NAME=zarsad-db
ENV MIKRO_ORM_DB_PASSWORD=testpass
ENV MIKRO_ORM_DB_USER=postgres
ENV NODE_ENV=development
ENV APP_PORT=3007

CMD [ "node" , "dist/main.js" ]
